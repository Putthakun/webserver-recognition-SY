version: "3.9"

services:
  web_server_1: # FastAPI 1
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - SY_network
    ports:
      - "8002:8001"  # Port web_server_1 http://0.0.0.0:8002/docs#/
    volumes:
      - ./app:/app
    depends_on:
      SY_rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - RABBITMQ_HOST=SY_rabbitmq
      - REDIS_PORT=6379
    restart: always

  web_server_2: # FastAPI 2
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - SY_network
    ports:
      - "8003:8001"   # Port web_server_2 http://0.0.0.0:8003/docs#/
    volumes:
      - ./app:/app
    depends_on:
      SY_rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - RABBITMQ_HOST=SY_rabbitmq
      - REDIS_PORT=6379
    restart: always

  web_server_3: # FastAPI 3
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - SY_network
    ports:
      - "8004:8001"  # Port web_server_3 http://0.0.0.0:8004/docs#/
    volumes:
      - ./app:/app
    depends_on:
      SY_rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - RABBITMQ_HOST=SY_rabbitmq
      - REDIS_PORT=6379
    restart: always

  # Nginx container
  nginx:
    image: nginx:latest 
    container_name: nginx_proxy
    networks:
      - SY_network
    ports:
      - "80:80"  # Bind the port from NGINX that receives requests to multiple instances.
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web_server_1
      - web_server_2
      - web_server_3
    restart: always
  
  # RabbitMQ container
  SY_rabbitmq:
    image: "rabbitmq:3-management"
    container_name: SY_rabbitmq
    networks:
      - SY_network
    environment:
      RABBITMQ_DEFAULT_USER: "S@ony_devide0102"
      RABBITMQ_DEFAULT_PASS: "S@ony_devide0102"
    ports:
      - "5672:5672"
      - "15672:15672" # UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      retries: 5
      timeout: 5s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    networks:
      - SY_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_ADMIN_PASSWORD=admin123  
    ports:
      - "3000:3000"
    networks:
      - SY_network

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  SY_network:
    external: true
